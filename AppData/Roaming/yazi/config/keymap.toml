# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"

[[manager.prepend_keymap]]
on = ["<Enter>"]
run = "plugin --sync smart-enter"
desc = "Enter the child directory, or open the selected file"

[[manager.prepend_keymap]]
on = ["l"]
run = "plugin --sync smart-enter"
desc = "Enter the child directory, or open the selected file"

[[manager.prepend_keymap]]
on = ["<Backspace>"]
run = "leave"
desc = "Go back to the parent directory"

[[manager.prepend_keymap]]
on   = [ "u" ]
run  = 'undo'
desc = "for undo the last operation"

[[manager.prepend_keymap]]
on   = [ "U" ]
run  = 'redo'
desc = "for redo the last operation"

## Maximize the preview screen
[[manager.prepend_keymap]]
on   = [ "M" ]
run  = "plugin --sync max-preview"
desc = "Maximize or restore preview"

## Minimize the preview screen
[[manager.prepend_keymap]]
on   = [ "H" ]
run  = "plugin --sync hide-preview"
desc = "Hide or show preview"

## Open smart filter
[[manager.prepend_keymap]]
on   = [ "F" ]
run  = "plugin smart-filter"
desc = "Smart filter"

## Compressing files using ouch
[[manager.prepend_keymap]]
on = ["C"]
run = "plugin ouch --args=zip"
desc = "Compress with ouch"

## Call PowerShell
[[manager.prepend_keymap]]
on   = "<C-s>"
run  = 'shell "pwsh.exe" --block --confirm'
desc = "Open PowerShell here"

[[input.prepend_keymap]]
on   = "<Esc>"
run  = "close"
desc = "Cancel input"

[[manager.prepend_keymap]]
on   = [ "c", "m" ]
run  = "plugin chmod"
desc = "Chmod on selected files"

# not working
# The latest main branch of Yazi is required at the moment. Support shell: bash, zsh ,fish ,nushell
[[manager.prepend_keymap]]
on   = [ "f","g" ]
run  = "plugin fg"
desc = "find file by content (fuzzy match)"

[[manager.prepend_keymap]]
on   = [ "f","G" ]
run  = "plugin fg --args='rg'"
desc = "find file by content (ripgrep match)"

[[manager.prepend_keymap]]
on   = [ "f","f" ]
run  = "plugin fg --args='fzf'"
desc = "find file by filename"
#